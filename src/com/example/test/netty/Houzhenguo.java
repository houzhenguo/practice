// This file is generated by genbeans tool. DO NOT EDIT! @formatter:off
package com.example.test.netty;

import jane.core.Bean;
import jane.core.MarshalException;
import jane.core.Octets;
import jane.core.OctetsStream;

/**
 * bean的注释
 */
public class Houzhenguo extends Bean<Houzhenguo>
{
	private static final long serialVersionUID = 0xbeac809b2a1baab5L;
	public  static final int BEAN_TYPE = 1;
	public  static final String BEAN_TYPENAME = Houzhenguo.class.getSimpleName();
	public  static final Houzhenguo BEAN_STUB = new Houzhenguo();
	public  static final int TEST_CONST1 = 5; // 测试类静态常量
	public  static final String TEST_CONST2 = "test_const2";

	protected /*  1*/ int value1; // 字段的注释
	protected /*  2*/ long value2;
	protected /*  3*/ String value3;

	public Houzhenguo()
	{
		value3 = "";
	}

	public Houzhenguo(int value1, long value2, String value3)
	{
		this.value1 = value1;
		this.value2 = value2;
		this.value3 = (value3 != null ? value3 : "");
	}

	@Override
	public void reset()
	{
		value1 = 0;
		value2 = 0;
		value3 = "";
	}

	@Override
	public void assign(Houzhenguo _b_)
	{
		if (_b_ == this) return;
		if (_b_ == null) { reset(); return; }
		this.value1 = _b_.value1;
		this.value2 = _b_.value2;
		this.value3 = (_b_.value3 != null ? _b_.value3 : "");
	}

	/** @return 字段的注释 */
	public int getValue1()
	{
		return value1;
	}

	/** @param value1 字段的注释 */
	public void setValue1(int value1)
	{
		this.value1 = value1;
	}

	public long getValue2()
	{
		return value2;
	}

	public void setValue2(long value2)
	{
		this.value2 = value2;
	}

	public String getValue3()
	{
		return value3;
	}

	public void setValue3(String value3)
	{
		this.value3 = (value3 != null ? value3 : "");
	}

	@Override
	public int type()
	{
		return BEAN_TYPE;
	}

	@Override
	public String typeName()
	{
		return BEAN_TYPENAME;
	}

	@Override
	public Houzhenguo stub()
	{
		return BEAN_STUB;
	}

	@Override
	public Houzhenguo create()
	{
		return new Houzhenguo();
	}

	@Override
	public int initSize()
	{
		return 16;
	}

	@Override
	public int maxSize()
	{
		return 16;
	}

	@Override
	public Octets marshal(Octets _s_)
	{
		if(this.value1 != 0) _s_.marshal1((byte)0x04).marshal(this.value1);
		if(this.value2 != 0) _s_.marshal1((byte)0x08).marshal(this.value2);
		if(!this.value3.isEmpty()) _s_.marshal1((byte)0x0d).marshal(this.value3);
		return _s_.marshalZero();
	}

	@Override
	public OctetsStream unmarshal(OctetsStream _s_) throws MarshalException
	{
		for (;;) { int _i_ = _s_.unmarshalInt1(), _t_ = _i_ & 3; if ((_i_ >>= 2) == 63) _i_ += _s_.unmarshalInt1(); switch(_i_)
		{
			case 0: return _s_;
			case 1: this.value1 = _s_.unmarshalInt(_t_); break;
			case 2: this.value2 = _s_.unmarshalLong(_t_); break;
			case 3: this.value3 = _s_.unmarshalString(_t_); break;
			default: _s_.unmarshalSkipVar(_t_);
		}}
	}

	@Override
	public Houzhenguo clone()
	{
		return new Houzhenguo(value1, value2, value3);
	}

	@Override
	public int hashCode()
	{
		int _h_ = (int)serialVersionUID;
		_h_ = _h_ * 16777619 + this.value1;
		_h_ = _h_ * 16777619 + (int)this.value2;
		_h_ = _h_ * 16777619 + this.value3.hashCode();
		return _h_;
	}

	@Override
	public boolean equals(Object o)
	{
		if (o == this) return true;
		if (!(o instanceof Houzhenguo)) return false;
		Houzhenguo _b_ = (Houzhenguo)o;
		if (this.value1 != _b_.value1) return false;
		if (this.value2 != _b_.value2) return false;
		if (!this.value3.equals(_b_.value3)) return false;
		return true;
	}

	@Override
	public int compareTo(Houzhenguo _b_)
	{
		if (_b_ == this) return 0;
		if (_b_ == null) return 1;
		int _c_;
		_c_ = Integer.compare(this.value1, _b_.value1); if (_c_ != 0) return _c_;
		_c_ = Long.compare(this.value2, _b_.value2); if (_c_ != 0) return _c_;
		_c_ = this.value3.compareTo(_b_.value3); if (_c_ != 0) return _c_;
		return 0;
	}

	@Override
	public String toString()
	{
		StringBuilder _s_ = new StringBuilder(16 + 16 * 2).append('{');
		_s_.append(this.value1).append(',');
		_s_.append(this.value2).append(',');
		_s_.append(this.value3).append(',');
		_s_.setLength(_s_.length() - 1);
		return _s_.append('}').toString();
	}
}
